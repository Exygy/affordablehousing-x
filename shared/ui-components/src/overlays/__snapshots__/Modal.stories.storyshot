// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Overlays/Modal Basic Modal 1`] = `
<div
  style={
    Object {
      "padding": "1rem",
    }
  }
>
  <Button
    onClick={[Function]}
  >
    <button
      className="button"
      onClick={[Function]}
    >
      Open Modal
    </button>
  </Button>
  <div
    style={
      Object {
        "height": "1000px",
      }
    }
  />
  <div>
    â€¦
  </div>
  <Component
    actions={
      Array [
        <Button
          onClick={[Function]}
          type="is-primary"
        >
          Submit
        </Button>,
        <Button
          border="is-borderless"
          onClick={[Function]}
          type="is-secondary"
        >
          Cancel
        </Button>,
      ]
    }
    ariaDescription="Modal description"
    onClose={[Function]}
    open={false}
    title="Modal Title"
  >
    <Component
      ariaDescription="Modal description"
      ariaLabel="Modal Title"
      onClose={[Function]}
      open={false}
    >
      <Portal
        containerInfo={<div />}
      >
        <CSSTransition
          classNames="overlay-effect"
          in={false}
          mountOnEnter={true}
          timeout={250}
          unmountOnExit={true}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={false}
            mountOnEnter={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={250}
            unmountOnExit={true}
          />
        </CSSTransition>
      </Portal>
    </Component>
  </Component>
  <InlineSVG
    cacheRequests={true}
    src="/images/icons.svg"
    uniquifyIDs={false}
  />
</div>
`;

exports[`Storyshots Overlays/Modal Success Failure Modal 1`] = `
<div
  style={
    Object {
      "padding": "1rem",
    }
  }
>
  <Component
    actions={
      Array [
        <Button
          onClick={[Function]}
          type="is-success"
        >
          Submit
        </Button>,
        <Button
          onClick={[Function]}
          type="is-alert"
        >
          Cancel
        </Button>,
      ]
    }
    ariaDescription="Modal description"
    onClose={[Function]}
    open={true}
    title="Modal Title"
  >
    <Component
      ariaDescription="Modal description"
      ariaLabel="Modal Title"
      onClose={[Function]}
      open={true}
    >
      <Portal
        containerInfo={
          <div>
            <div
              aria-describedby="Modal description"
              aria-labelledby="Modal Title"
              class="fixed-overlay is-backdrop"
              role="dialog"
            >
              <div
                class="fixed-overlay__inner"
              >
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="1"
                />
                <div
                  data-focus-lock-disabled="false"
                >
                  <div
                    class="modal"
                  >
                    <header
                      class="modal__inner"
                    >
                      <h1
                        class="modal__title"
                      >
                        Modal Title
                      </h1>
                    </header>
                    <section
                      class="modal__inner"
                    >
                      <p
                        class="c-steel"
                      >
                        Modal Content
                      </p>
                    </section>
                    <footer
                      class="modal__footer bg-primary-lighter"
                    >
                      <section
                        class="grid-section"
                      >
                        <div
                          class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                        >
                          <article
                            class="grid-item"
                          >
                            <button
                              class="button is-success"
                            >
                              Submit
                            </button>
                          </article>
                          <article
                            class="grid-item"
                          >
                            <button
                              class="button is-alert"
                            >
                              Cancel
                            </button>
                          </article>
                        </div>
                      </section>
                    </footer>
                  </div>
                </div>
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
              </div>
            </div>
          </div>
        }
      >
        <CSSTransition
          classNames="overlay-effect"
          in={true}
          mountOnEnter={true}
          timeout={250}
          unmountOnExit={true}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={250}
            unmountOnExit={true}
          >
            <OverlayInner
              ariaDescription="Modal description"
              ariaLabel="Modal Title"
              onClose={[Function]}
              open={true}
            >
              <div
                aria-describedby="Modal description"
                aria-labelledby="Modal Title"
                className="fixed-overlay is-backdrop"
                role="dialog"
              >
                <div
                  className="fixed-overlay__inner"
                >
                  <ForwardRef>
                    <ForwardRef
                      as="div"
                      autoFocus={true}
                      crossFrame={true}
                      disabled={false}
                      lockProps={Object {}}
                      noFocusGuards={false}
                      persistentFocus={false}
                      returnFocus={false}
                      sideCar={[Function]}
                    >
                      <div
                        data-focus-guard={true}
                        key="guard-first"
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={0}
                      />
                      <div
                        data-focus-guard={true}
                        key="guard-nearest"
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={1}
                      />
                      <SideEffect(FocusWatcher)
                        autoFocus={true}
                        crossFrame={true}
                        disabled={false}
                        id={Object {}}
                        observed={
                          <div
                            data-focus-lock-disabled="false"
                          >
                            <div
                              class="modal"
                            >
                              <header
                                class="modal__inner"
                              >
                                <h1
                                  class="modal__title"
                                >
                                  Modal Title
                                </h1>
                              </header>
                              <section
                                class="modal__inner"
                              >
                                <p
                                  class="c-steel"
                                >
                                  Modal Content
                                </p>
                              </section>
                              <footer
                                class="modal__footer bg-primary-lighter"
                              >
                                <section
                                  class="grid-section"
                                >
                                  <div
                                    class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                  >
                                    <article
                                      class="grid-item"
                                    >
                                      <button
                                        class="button is-success"
                                      >
                                        Submit
                                      </button>
                                    </article>
                                    <article
                                      class="grid-item"
                                    >
                                      <button
                                        class="button is-alert"
                                      >
                                        Cancel
                                      </button>
                                    </article>
                                  </div>
                                </section>
                              </footer>
                            </div>
                          </div>
                        }
                        onActivation={[Function]}
                        onDeactivation={[Function]}
                        persistentFocus={false}
                        returnFocus={[Function]}
                        shards={Array []}
                        sideCar={
                          Object {
                            "assignMedium": [Function],
                            "assignSyncMedium": [Function],
                            "options": Object {
                              "async": true,
                              "ssr": false,
                            },
                            "read": [Function],
                            "useMedium": [Function],
                          }
                        }
                      >
                        <FocusWatcher
                          autoFocus={true}
                          crossFrame={true}
                          disabled={false}
                          id={Object {}}
                          observed={
                            <div
                              data-focus-lock-disabled="false"
                            >
                              <div
                                class="modal"
                              >
                                <header
                                  class="modal__inner"
                                >
                                  <h1
                                    class="modal__title"
                                  >
                                    Modal Title
                                  </h1>
                                </header>
                                <section
                                  class="modal__inner"
                                >
                                  <p
                                    class="c-steel"
                                  >
                                    Modal Content
                                  </p>
                                </section>
                                <footer
                                  class="modal__footer bg-primary-lighter"
                                >
                                  <section
                                    class="grid-section"
                                  >
                                    <div
                                      class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                    >
                                      <article
                                        class="grid-item"
                                      >
                                        <button
                                          class="button is-success"
                                        >
                                          Submit
                                        </button>
                                      </article>
                                      <article
                                        class="grid-item"
                                      >
                                        <button
                                          class="button is-alert"
                                        >
                                          Cancel
                                        </button>
                                      </article>
                                    </div>
                                  </section>
                                </footer>
                              </div>
                            </div>
                          }
                          onActivation={[Function]}
                          onDeactivation={[Function]}
                          persistentFocus={false}
                          returnFocus={[Function]}
                          shards={Array []}
                          sideCar={
                            Object {
                              "assignMedium": [Function],
                              "assignSyncMedium": [Function],
                              "options": Object {
                                "async": true,
                                "ssr": false,
                              },
                              "read": [Function],
                              "useMedium": [Function],
                            }
                          }
                        />
                      </SideEffect(FocusWatcher)>
                      <div
                        data-focus-lock-disabled={false}
                        onBlur={[Function]}
                        onFocus={[Function]}
                      >
                        <div
                          className="modal"
                        >
                          <ModalHeader
                            title="Modal Title"
                          >
                            <header
                              className="modal__inner"
                            >
                              <h1
                                className="modal__title"
                              >
                                Modal Title
                              </h1>
                            </header>
                          </ModalHeader>
                          <section
                            className="modal__inner"
                          >
                            <p
                              className="c-steel"
                            >
                              Modal Content
                            </p>
                          </section>
                          <ModalFooter
                            actions={
                              Array [
                                <Button
                                  onClick={[Function]}
                                  type="is-success"
                                >
                                  Submit
                                </Button>,
                                <Button
                                  onClick={[Function]}
                                  type="is-alert"
                                >
                                  Cancel
                                </Button>,
                              ]
                            }
                          >
                            <footer
                              className="modal__footer bg-primary-lighter"
                            >
                              <GridSection
                                columns={4}
                                reverse={true}
                                tightSpacing={true}
                              >
                                <section
                                  className="grid-section"
                                >
                                  <div
                                    className="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                  >
                                    <GridCell
                                      key="0"
                                    >
                                      <article
                                        className="grid-item"
                                      >
                                        <Button
                                          onClick={[Function]}
                                          type="is-success"
                                        >
                                          <button
                                            className="button is-success"
                                            onClick={[Function]}
                                          >
                                            Submit
                                          </button>
                                        </Button>
                                      </article>
                                    </GridCell>
                                    <GridCell
                                      key="1"
                                    >
                                      <article
                                        className="grid-item"
                                      >
                                        <Button
                                          onClick={[Function]}
                                          type="is-alert"
                                        >
                                          <button
                                            className="button is-alert"
                                            onClick={[Function]}
                                          >
                                            Cancel
                                          </button>
                                        </Button>
                                      </article>
                                    </GridCell>
                                  </div>
                                </section>
                              </GridSection>
                            </footer>
                          </ModalFooter>
                        </div>
                      </div>
                      <div
                        data-focus-guard={true}
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={0}
                      />
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </OverlayInner>
          </Transition>
        </CSSTransition>
      </Portal>
    </Component>
  </Component>
  <InlineSVG
    cacheRequests={true}
    src="/images/icons.svg"
    uniquifyIDs={false}
  />
</div>
`;

exports[`Storyshots Overlays/Modal Transparent Overlay Modal 1`] = `
<div
  style={
    Object {
      "padding": "1rem",
    }
  }
>
  <Component
    actions={
      Array [
        <Button
          onClick={[Function]}
          type="is-primary"
        >
          Submit
        </Button>,
        <Button
          border="is-borderless"
          onClick={[Function]}
          type="is-secondary"
        >
          Cancel
        </Button>,
      ]
    }
    ariaDescription="Modal description"
    backdrop={false}
    onClose={[Function]}
    open={true}
    title="Modal Title"
  >
    <Component
      ariaDescription="Modal description"
      ariaLabel="Modal Title"
      backdrop={false}
      onClose={[Function]}
      open={true}
    >
      <Portal
        containerInfo={
          <div>
            <div
              aria-describedby="Modal description"
              aria-labelledby="Modal Title"
              class="fixed-overlay"
              role="dialog"
            >
              <div
                class="fixed-overlay__inner"
              >
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="1"
                />
                <div
                  data-focus-lock-disabled="false"
                >
                  <div
                    class="modal"
                  >
                    <header
                      class="modal__inner"
                    >
                      <h1
                        class="modal__title"
                      >
                        Modal Title
                      </h1>
                    </header>
                    <section
                      class="modal__inner"
                    >
                      <p
                        class="c-steel"
                      >
                        Modal Content
                      </p>
                    </section>
                    <footer
                      class="modal__footer bg-primary-lighter"
                    >
                      <section
                        class="grid-section"
                      >
                        <div
                          class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                        >
                          <article
                            class="grid-item"
                          >
                            <button
                              class="button is-primary"
                            >
                              Submit
                            </button>
                          </article>
                          <article
                            class="grid-item"
                          >
                            <button
                              class="button is-secondary is-borderless"
                            >
                              Cancel
                            </button>
                          </article>
                        </div>
                      </section>
                    </footer>
                  </div>
                </div>
                <div
                  data-focus-guard="true"
                  style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
                  tabindex="0"
                />
              </div>
            </div>
          </div>
        }
      >
        <CSSTransition
          classNames="overlay-effect"
          in={true}
          mountOnEnter={true}
          timeout={250}
          unmountOnExit={true}
        >
          <Transition
            appear={false}
            enter={true}
            exit={true}
            in={true}
            mountOnEnter={true}
            onEnter={[Function]}
            onEntered={[Function]}
            onEntering={[Function]}
            onExit={[Function]}
            onExited={[Function]}
            onExiting={[Function]}
            timeout={250}
            unmountOnExit={true}
          >
            <OverlayInner
              ariaDescription="Modal description"
              ariaLabel="Modal Title"
              backdrop={false}
              onClose={[Function]}
              open={true}
            >
              <div
                aria-describedby="Modal description"
                aria-labelledby="Modal Title"
                className="fixed-overlay"
                role="dialog"
              >
                <div
                  className="fixed-overlay__inner"
                >
                  <ForwardRef>
                    <ForwardRef
                      as="div"
                      autoFocus={true}
                      crossFrame={true}
                      disabled={false}
                      lockProps={Object {}}
                      noFocusGuards={false}
                      persistentFocus={false}
                      returnFocus={false}
                      sideCar={[Function]}
                    >
                      <div
                        data-focus-guard={true}
                        key="guard-first"
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={0}
                      />
                      <div
                        data-focus-guard={true}
                        key="guard-nearest"
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={1}
                      />
                      <SideEffect(FocusWatcher)
                        autoFocus={true}
                        crossFrame={true}
                        disabled={false}
                        id={Object {}}
                        observed={
                          <div
                            data-focus-lock-disabled="false"
                          >
                            <div
                              class="modal"
                            >
                              <header
                                class="modal__inner"
                              >
                                <h1
                                  class="modal__title"
                                >
                                  Modal Title
                                </h1>
                              </header>
                              <section
                                class="modal__inner"
                              >
                                <p
                                  class="c-steel"
                                >
                                  Modal Content
                                </p>
                              </section>
                              <footer
                                class="modal__footer bg-primary-lighter"
                              >
                                <section
                                  class="grid-section"
                                >
                                  <div
                                    class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                  >
                                    <article
                                      class="grid-item"
                                    >
                                      <button
                                        class="button is-primary"
                                      >
                                        Submit
                                      </button>
                                    </article>
                                    <article
                                      class="grid-item"
                                    >
                                      <button
                                        class="button is-secondary is-borderless"
                                      >
                                        Cancel
                                      </button>
                                    </article>
                                  </div>
                                </section>
                              </footer>
                            </div>
                          </div>
                        }
                        onActivation={[Function]}
                        onDeactivation={[Function]}
                        persistentFocus={false}
                        returnFocus={[Function]}
                        shards={Array []}
                        sideCar={
                          Object {
                            "assignMedium": [Function],
                            "assignSyncMedium": [Function],
                            "options": Object {
                              "async": true,
                              "ssr": false,
                            },
                            "read": [Function],
                            "useMedium": [Function],
                          }
                        }
                      >
                        <FocusWatcher
                          autoFocus={true}
                          crossFrame={true}
                          disabled={false}
                          id={Object {}}
                          observed={
                            <div
                              data-focus-lock-disabled="false"
                            >
                              <div
                                class="modal"
                              >
                                <header
                                  class="modal__inner"
                                >
                                  <h1
                                    class="modal__title"
                                  >
                                    Modal Title
                                  </h1>
                                </header>
                                <section
                                  class="modal__inner"
                                >
                                  <p
                                    class="c-steel"
                                  >
                                    Modal Content
                                  </p>
                                </section>
                                <footer
                                  class="modal__footer bg-primary-lighter"
                                >
                                  <section
                                    class="grid-section"
                                  >
                                    <div
                                      class="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                    >
                                      <article
                                        class="grid-item"
                                      >
                                        <button
                                          class="button is-primary"
                                        >
                                          Submit
                                        </button>
                                      </article>
                                      <article
                                        class="grid-item"
                                      >
                                        <button
                                          class="button is-secondary is-borderless"
                                        >
                                          Cancel
                                        </button>
                                      </article>
                                    </div>
                                  </section>
                                </footer>
                              </div>
                            </div>
                          }
                          onActivation={[Function]}
                          onDeactivation={[Function]}
                          persistentFocus={false}
                          returnFocus={[Function]}
                          shards={Array []}
                          sideCar={
                            Object {
                              "assignMedium": [Function],
                              "assignSyncMedium": [Function],
                              "options": Object {
                                "async": true,
                                "ssr": false,
                              },
                              "read": [Function],
                              "useMedium": [Function],
                            }
                          }
                        />
                      </SideEffect(FocusWatcher)>
                      <div
                        data-focus-lock-disabled={false}
                        onBlur={[Function]}
                        onFocus={[Function]}
                      >
                        <div
                          className="modal"
                        >
                          <ModalHeader
                            title="Modal Title"
                          >
                            <header
                              className="modal__inner"
                            >
                              <h1
                                className="modal__title"
                              >
                                Modal Title
                              </h1>
                            </header>
                          </ModalHeader>
                          <section
                            className="modal__inner"
                          >
                            <p
                              className="c-steel"
                            >
                              Modal Content
                            </p>
                          </section>
                          <ModalFooter
                            actions={
                              Array [
                                <Button
                                  onClick={[Function]}
                                  type="is-primary"
                                >
                                  Submit
                                </Button>,
                                <Button
                                  border="is-borderless"
                                  onClick={[Function]}
                                  type="is-secondary"
                                >
                                  Cancel
                                </Button>,
                              ]
                            }
                          >
                            <footer
                              className="modal__footer bg-primary-lighter"
                            >
                              <GridSection
                                columns={4}
                                reverse={true}
                                tightSpacing={true}
                              >
                                <section
                                  className="grid-section"
                                >
                                  <div
                                    className="grid-section__inner md:grid md:grid-cols-4 md:gap-2 is-reversed"
                                  >
                                    <GridCell
                                      key="0"
                                    >
                                      <article
                                        className="grid-item"
                                      >
                                        <Button
                                          onClick={[Function]}
                                          type="is-primary"
                                        >
                                          <button
                                            className="button is-primary"
                                            onClick={[Function]}
                                          >
                                            Submit
                                          </button>
                                        </Button>
                                      </article>
                                    </GridCell>
                                    <GridCell
                                      key="1"
                                    >
                                      <article
                                        className="grid-item"
                                      >
                                        <Button
                                          border="is-borderless"
                                          onClick={[Function]}
                                          type="is-secondary"
                                        >
                                          <button
                                            className="button is-secondary is-borderless"
                                            onClick={[Function]}
                                          >
                                            Cancel
                                          </button>
                                        </Button>
                                      </article>
                                    </GridCell>
                                  </div>
                                </section>
                              </GridSection>
                            </footer>
                          </ModalFooter>
                        </div>
                      </div>
                      <div
                        data-focus-guard={true}
                        style={
                          Object {
                            "height": "0px",
                            "left": "1px",
                            "overflow": "hidden",
                            "padding": 0,
                            "position": "fixed",
                            "top": "1px",
                            "width": "1px",
                          }
                        }
                        tabIndex={0}
                      />
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </OverlayInner>
          </Transition>
        </CSSTransition>
      </Portal>
    </Component>
  </Component>
  <InlineSVG
    cacheRequests={true}
    src="/images/icons.svg"
    uniquifyIDs={false}
  />
</div>
`;
