version: 2.1
orbs:
  cypress: cypress-io/cypress@3.2.0
  node: circleci/node@5

executors:
  cypress-node:
    docker:
      - image: "cypress/base:18.14.1"
      - image: "cimg/postgres:12.10"
        environment:
          POSTGRES_USER: bloom-ci
          # Never do this in production or with any sensitive / non-test data:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bloom
          JURISDICTION_NAME: Bloomington
    environment:
      PORT: "3100"
      EMAIL_API_KEY: "SG.SOME-LONG-SECRET-KEY"
      APP_SECRET: "CI-LONG-SECRET-KEY"
      NODE_ENV: "development"
      # DB URL for migration and seeds:
      DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
      # DB URL for the jest tests per ormconfig.test.ts
      TEST_DATABASE_URL: "postgres://bloom-ci@localhost:5432/bloom"
      PARTNERS_PORTAL_URL: "http://localhost:3001"
      JURISDICTION_NAME: Bloomington
  standard-node:
    docker:
      - image: "cimg/node:18.14.2"
      - image: "cimg/postgres:12.10"
        environment:
          POSTGRES_USER: bloom-ci
          # Never do this in production or with any sensitive / non-test data:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bloom_prisma
          JURISDICTION_NAME: Bloomington

jobs:
  setup:
    executor: cypress-node
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: sites/public
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - node/install-packages:
          app-dir: backend_new
          pkg-manager: yarn
          cache-version: build-cache-{{ .Environment.CIRCLE_SHA1 }}
      - save_cache:
          key: build-cache-new-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/
      - run:
          name: setup db and seed
          command: yarn test:backend:new:dbsetup:withseed
      - run:
          name: run all
          command: yarn dev:all-cypress
          background: true
          working_directory: sites/public
      # - when:
      #     condition: << parameters.start-command >>
      #     steps:
      #       - run:
      #           name: Start Server
      #           command: << parameters.start-command >>
      #           background: true
      #           working_directory: << parameters.working-directory >>
      - run:
          name: wait
          command: yarn dev:public-wait
          working_directory: sites/public
      - run:
          name: Run Cypress
          command: npx cypress run
          working_directory: sites/public
      - store_artifacts:
          path: sites/public/cypress/videos
      - store_artifacts:
          path: sites/public/cypress/screenshots
      # - run:
      #     name: Verify Cypress
      #     command: "npx cypress verify"
      #     working_directory: sites/public
  # build-and-run-backend:

    

workflows:
  build:
    jobs:
      - setup